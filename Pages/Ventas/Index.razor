@page "/facturaciones"
@inject NavigationManager NavigationManager
@inject IVentaServices VentaServices



<div class="row align-items-center">
    <div class="col">
        <h3 class="d-print-none">Reportes de Ventas</h3>
        <h3 class="d-none d-print-block">Reporte de Ventas</h3>
    </div>
    <div class="col-auto text-end">
        <!-- Utilizamos la clase "col-auto" para ajustar automáticamente el ancho de la columna -->
        <div class="d-print-none">
            <a class="btn btn-primary" href="/factura">
                <i class="oi oi-plus"></i> <!-- Agregamos el icono de agregar -->
            </a>
        </div>
    </div>
</div>





<div class="factura-lista">
    @if (Ventas != null)
    {
        <div class="table-responsive">
            <table class="table table-striped table-bordered table-auto">
                <thead class="thead-dark">
                    <tr>
                        <th scope="col">#</th>
                        <th scope="col">Cliente</th>
                        <th scope="col">Monto</th>
                        <th scope="col">Fecha</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var f in Ventas)
                    {
                        <tr>
                            <th scope="row">@f.Id</th>
                            <td>@f.Cliente.NombreC</td>
                            <td>@f.SubTotal.ToString("N2")</td>
                            <td>@f.Fecha</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>



    }
</div>



@code {
    public List<VentaResponse> Ventas { get; set; } = new List<VentaResponse>();

    protected override async Task OnInitializedAsync()
    {
        await CargarVentas();
    }

    async Task CargarVentas()
    {
        var result = await VentaServices.Consultar();
        if (result.Success)
        {
            Ventas = result.Data ?? new List<VentaResponse>();
        }
    }
}
